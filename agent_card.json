{
  "id": "datarep.v1",
  "name": "DataPrepAgent",
  "description": "Cleans & encodes raw tabular data. Can detect drift and outliers.",
  "capabilities": [
    {
      "name": "process_dataset",
      "description": "Processes a dataset from a given path.",
      "input_schema": {
        "type": "object",
        "properties": {
          "dataset_path": {
            "type": "string",
            "description": "Local or accessible path to the raw dataset file."
          }
        },
        "required": ["dataset_path"]
      },
      "output_schema": {
         "type": "object",
         "properties": {
            "processed_path": {"type": "string"},
            "drift_detected": {"type": "boolean"}
         }
      }
    },
    {
       "name": "detect_drift",
       "description": "Analyzes a dataset for data drift.",
       "input_schema": { /* ... */ },
       "output_schema": { /* ... */ }
    }
  ],
  "endpoint": "http://localhost:8001/call", # Conceptual endpoint for A2A calls
  "auth": "none" # Simplified for demo, could be "bearer", "oauth" etc.
}

{
  "id": "automl.v1",
  "name": "AutoMLAgent",
  "description": "Runs DataRobot AutoML projects on provided data.",
  "capabilities": [
    {
      "name": "run_automl",
      "description": "Initiates a DataRobot project and runs Autopilot.",
      "input_schema": {
        "type": "object",
        "properties": {
          "processed_data_path": {
            "type": "string",
            "description": "Local or accessible path to the processed dataset file."
          },
          "target_feature": {
            "type": "string",
            "description": "The name of the target variable for modeling."
          }
        },
        "required": ["processed_data_path", "target_feature"]
      },
       "output_schema": {
           "type": "object",
           "properties": {
               "project_id": {"type": "string"},
               "champion_model_id": {"type": "string"}
           }
       }
    }
  ],
  "endpoint": "http://localhost:8002/call", # Conceptual endpoint
  "auth": "bearer" # DataRobot API key authentication concept
}